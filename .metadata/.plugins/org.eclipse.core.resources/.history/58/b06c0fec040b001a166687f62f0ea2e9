package com.lf.sino.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.lf.sino.model.Denuncia;
import com.lf.sino.model.LocalAcidente;
import com.lf.sino.model.Municipio;
import com.lf.sino.repository.DenunciaRepository;
import com.lf.sino.repository.LocalAcidenteRepository;
import com.lf.sino.repository.MunicipioRepository;

@Controller
@RequestMapping("/")
public class DenunciaController {

	@Autowired
	DenunciaRepository denunciaRepository;

	@Autowired
	LocalAcidenteRepository localAcidenteRepository;

	@Autowired
	MunicipioRepository municipioRepository;

	// buscar a lista de municípios no banco de dados
	@ModelAttribute("municipios")
	public List<Municipio> listarMunicipios() {
		return municipioRepository.findAll();
	}

	// mapear página de cadastro do local do acidente
	@GetMapping("/localacidente/cadastrar")
	public String cadastrarLocalAcidente(LocalAcidente localAcidente) {
		return "localacidente/cadastro";
	}

	// salvar local do acidente
	@PostMapping("/localacidente/salvar")
	public String salvarLocalAcidente(@Valid LocalAcidente localAcidente) {

		System.out.println();
		System.out.println("LOCAL ACIDENTE dentro do método SALVAR(): " + localAcidente);
		System.out.println();
		localAcidenteRepository.save(localAcidente);
		return "redirect:/denuncia/cadastrar";
	}

	// mapear página de cadastro da denúncia
	@GetMapping("/denuncia/cadastrar")
	public String cadastrarDenuncia(Denuncia denuncia) {
		return "denuncia/cadastro";
	}

	// salvar denúncia
	@PostMapping("/denuncia/salvar/{id}")
	public String salvarDenuncia(@PathVariable("id") Integer id, ModelMap model, @Valid Denuncia denuncia,
			LocalAcidente localAcidente) {
		model.addAttribute(localAcidenteRepository.findById(id));

		System.out.println("TESTAAAAAAAAAAAAAAAAAANO   " + localAcidente);

		System.out.println();
		System.out.println("DENÚNCIA dentro do método SALVAR(): " + denuncia);
		System.out.println();
		denunciaRepository.save(denuncia);

		return "redirect:/";
	}

//	@GetMapping("/editar/{id}")
//	public String preEditar(@PathVariable("id") Long id, ModelMap model) {
//		model.addAttribute("funcionario", funcionarioService.buscarPorId(id));
//		return "funcionario/cadastro";
//	}

}