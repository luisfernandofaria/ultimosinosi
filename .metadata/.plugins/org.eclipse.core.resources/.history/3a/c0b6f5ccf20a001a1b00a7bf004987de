package com.lf.sino.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.lf.sino.model.Denuncia;
import com.lf.sino.model.LocalAcidente;
import com.lf.sino.model.Municipio;
import com.lf.sino.repository.DenunciaRepository;
import com.lf.sino.repository.LocalAcidenteRepository;
import com.lf.sino.repository.MunicipioRepository;

@Controller
@RequestMapping("/")
public class DenunciaController {

	@Autowired
	DenunciaRepository denunciaRepository;

	@Autowired
	LocalAcidenteRepository localAcidenteRepository;

	@Autowired
	MunicipioRepository municipioRepository;

	//buscar os municípios no banco de dados
	@ModelAttribute("municipios")
	public List<Municipio> listarMunicipios() {
		return municipioRepository.findAll();
	}

	@PostMapping("/localacidente/salvar")
	public String salvar(@Valid LocalAcidente localAcidente, RedirectAttributes attr) {
		
		System.out.println();
		System.out.println("funcionario dentro do método SALVAR(): "+ localAcidente);
		System.out.println();
		
		localAcidenteRepository.save(localAcidente);
		attr.addFlashAttribute("success", "Local do acidente inserido com sucesso.");
		return "redirect:/localacidente/cadastrarLocalAcidente";
	}
	
	@GetMapping("/denuncia/cadastrar")
	
	public String cadastrarLocalAcidente(LocalAcidente localAcidente) {
		System.out.println();
		System.out.println("localAcidente dentro do método CADASTRAR(): "+ localAcidente);
		System.out.println();
		
		return "/localacidente/cadastro";
	}
	
	@PostMapping("/denuncia/salvar")
	public String salvar(@Valid Denuncia denuncia, RedirectAttributes attr) {
		
		System.out.println();
		System.out.println("funcionario dentro do método SALVAR(): "+ denuncia);
		System.out.println();
		
		denunciaRepository.save(denuncia);
		attr.addFlashAttribute("success", "Local do acidente inserido com sucesso.");
		return "redirect:/denuncia/cadastrar";
	}
	
	@GetMapping("/denuncia/cadastrar")
	public String cadastrar(Denuncia denuncia) {
		
		System.out.println();
		System.out.println("denuncia dentro do método CADASTRAR(): "+ denuncia);
		System.out.println();
		return "/denuncia/cadastro";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	//mapear página de cadastro do local do acidente
//	@GetMapping("/localacidente")
//	public String preencherLocalAcidente(LocalAcidente localAcidente) {
//		localAcidenteRepository.save(localAcidente);
//		
//		System.out.println("Local acidenteo dentro do método preencherLocalAcidente()");
//		System.out.println(localAcidente);
//		
//		return "denuncia/localacidente";
//	}
	
//	@GetMapping("/localacidente")
//	public String preencherLocalAcidente(Model model) {
//		
//		model.addAttribute("localAcidente", new LocalAcidente());
//		
//		localAcidenteRepository.save(localAcidente);
//		
//		System.out.println("Local acidenteo dentro do método preencherLocalAcidente()");
//		System.out.println(localAcidente);
//		
//		return "denuncia/localacidente";
//	}

	//salvar local do acidente
	@PostMapping("/salvarlocalacidente")
	public String salvarLocalAcidente(Model model) {

		model.addAttribute("denuncia", new Denuncia());
		System.out.println("classe model");
		System.out.println(model.getClass().getName());
		return "denuncia/dadosdenuncia";
	}

//	@PostMapping("/salvarlocalacidente")
//	public String salvar(@Valid LocalAcidente localAcidente, BindingResult result, RedirectAttributes attr) {
//		
//		localAcidenteRepository.save(localAcidente);
//		attr.addFlashAttribute("success", "Cargo inserido com sucesso.");
//		return "denuncia/dadosdenuncia";
//	}
	
	// -----------------------------------------------
	//mapear página de cadastro de denúncia
	@GetMapping("/dadosdenuncia")
	public String cadastrarDenuncia(Denuncia denuncia) {
		denunciaRepository.save(denuncia);
		System.out.println("Denuncia dentro do método cadastrarDenuncia()");
		System.out.println(denuncia);
		return "denuncia/dadosdenuncia";
	}

//	@PostMapping("/registrar")
//	public String salvar(@RequestBody Denuncia denuncia) {
//		System.out.println(denuncia);
//
//		// denunciaRepository.save(denuncia);
//		return "redirect:/";
//	}

//
//	@Transactional(readOnly = true)
//	@GetMapping("/teste")
//	public void testar() {
//	}
}