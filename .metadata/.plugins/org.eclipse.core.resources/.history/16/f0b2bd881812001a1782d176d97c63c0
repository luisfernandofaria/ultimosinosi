package com.lf.sino.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.lf.sino.repository.UsuarioRepository;

@EnableWebSecurity
@Configuration
public class SecurityConfigurations extends WebSecurityConfigurerAdapter {

	@Autowired
	private AutenticacaoService autenticacaoService;

	@Autowired
	private TokenService tokenService;

	@Autowired
	private UsuarioRepository usuarioRepository;

	// m√©todo somente para gerar senha para teste
//	public static void main(String[] args) {
//		System.out.println(new BCryptPasswordEncoder().encode("1"));
//	}

	@Override
	@Bean
	protected AuthenticationManager authenticationManager() throws Exception {
		return super.authenticationManager();
	}

	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		auth.userDetailsService(autenticacaoService).passwordEncoder(new BCryptPasswordEncoder());
	}

	// .antMatchers("/materialize/**, /webjars/**").permitAll()

	@Override
	protected void configure(HttpSecurity http) throws Exception {

		http.authorizeRequests().antMatchers(HttpMethod.GET, "/actuator/*").permitAll()

				.antMatchers("/", "/materialize/**", "/js/**", "/css/**", "/img/**", "/webjars/**").permitAll()
				.antMatchers(HttpMethod.GET, "/localacidente/cadastrar").permitAll()
				.antMatchers(HttpMethod.POST, "/localacidente/salvar").permitAll()
				.antMatchers(HttpMethod.GET, "/denuncia/cadastrar").permitAll()
				.antMatchers(HttpMethod.POST, "/denuncia/salvar").permitAll().antMatchers(HttpMethod.GET, "/home")
				.permitAll().antMatchers(HttpMethod.GET, "/denuncia/listaDenuncias").permitAll()
				.antMatchers(HttpMethod.GET, "/admin").permitAll().antMatchers(HttpMethod.GET, "/temp").permitAll()
				.antMatchers(HttpMethod.GET, "/localAcidente/listaMunicipios").permitAll()
				.antMatchers(HttpMethod.GET, "/acesso-nao-autorizado").permitAll()
				.antMatchers(HttpMethod.GET, "/rest/denuncias/listarMunicipios").permitAll()
				.antMatchers(HttpMethod.POST, "/auth").permitAll()
				.antMatchers(HttpMethod.POST, "/rest/denuncias/enviarDenuncia").permitAll().anyRequest().authenticated()
				.and().formLogin().and().csrf().disable().sessionManagement()
				.sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()

				.addFilterBefore(new AutenticacaoViaTokenFilter(tokenService, usuarioRepository),
						UsernamePasswordAuthenticationFilter.class);

	}

	@Override
	public void configure(WebSecurity web) throws Exception {
	}

}
